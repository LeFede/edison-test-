version: 1
frontend:
  phases:
    preBuild:
      commands:
        - npm install # Instala todas las dependencias
    build:
      commands:
        - env > .env # Crea el archivo .env
        - npm run optimize-images
        - npm run build # Ejecuta el script de construcci칩n
        - rm -rf node_modules # Elimina node_modules
        - npm install --omit=dev # Instala solo las dependencias de producci칩n
        - mv node_modules .amplify-hosting/compute/default/ # Mueve node_modules
        - mv .env .amplify-hosting/compute/default/.env # Mueve .env
        - npm install -g gzip-cli # Instalar gzip-cli (si no est치 instalado)
        - gzip -r .amplify-hosting/compute/default/ # Comprimir todos los archivos en el directorio de salida
        - npm install -g brotli # Instalar Brotli (si no est치 instalado)
        - brotli -r .amplify-hosting/compute/default/ --output-dir .amplify-hosting/compute/default/ --quality=11
  artifacts:
    baseDirectory: .amplify-hosting/compute/default
    files:
      - "**/*"
  cache:
    paths:
      - node_modules/**/*
  rewrites:
    - source: "/optimized-images/*"
      target: "/optimized-images/:splat"
      status: 200
      headers:
        Cache-Control: "public, max-age=31536000, immutable"
