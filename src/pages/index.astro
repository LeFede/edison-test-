---
import Layout from '../layouts/Layout.astro';
import { type AxiosResponse } from "axios";
import { aResult, type Result } from "@volpe/utils";
import {type Category, type Course, type IAcademy} from "../env.d"
import Market from "../components/Market/Market.astro"
import Test from '../components/Test.astro';
import api from '../../axios';
import { ACADEMY_ID } from 'astro:env/server';

const currentTime = new Date().toLocaleTimeString();
Astro.response.headers.set('Cache-Control', 'public, maxage=100, s-maxage=300, stale-while-revalidate=100');


const [err, axiosResponse] = await api.get[aResult](`/courses/market/${ACADEMY_ID}`) as Result<AxiosResponse<Course[]>>;

if (err) throw err
if (!axiosResponse) throw err

const [academyError, axiosResponseAcademy] = await api.get[aResult](`/academies/${ACADEMY_ID}`) as Result<AxiosResponse<IAcademy>>;

if (academyError) throw academyError
if (!axiosResponseAcademy) throw axiosResponseAcademy

const {data: courses} = axiosResponse
const {data: academy} = axiosResponseAcademy

const [categoriesError, axiosResponseCategories] = await api.get[aResult](`/categories`) as Result<AxiosResponse<Category[]>>;

if (categoriesError) throw categoriesError
if (!axiosResponseCategories) throw axiosResponseCategories

const {data: allCategories} = axiosResponseCategories

let categories = allCategories?.filter((e: any) => e.academyId === academy?.id)
---

<Layout academy={academy}>

  hola<br/>
  {currentTime}
  <br/>
  
  <h1 class="h-[2000px]">Im√°genes Optimizadas</h1>
  <Test server:defer/>
  <!-- <Market courses={courses} categories={categories}/> -->
  <Market courses={courses} categories={categories}/>
</Layout>

