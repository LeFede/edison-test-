---
Astro.response.headers.set('Cache-Control', 'public, maxage=10, s-maxage=10, stale-while-revalidate=5');
export const prerender = false;
import Layout from '../layouts/Layout.astro';
import Market from "../components/Market/Market.astro";
import localApiPath from "../utils/localApiPath"
import {localApi} from "../../axios"

const currentTime = new Date().toLocaleTimeString();

const [coursesResult, academyResult, categoriesResult] = await Promise.all([
  localApi.get(localApiPath(Astro, "courses")) ,
  localApi.get(localApiPath(Astro, "academy")),
  localApi.get(localApiPath(Astro, "categories")),
]);

let errors = {academy: null, courses: null, categories: null};

const [coursesError, courses] = coursesResult.data
const [academyError, academy] = academyResult.data;
const [categoriesError, allCategories] = categoriesResult.data;

if (coursesError || !courses) errors.courses = coursesError
if (academyError || !academy) errors.academy = academyError
if (categoriesError || !allCategories) errors.categories = categoriesError

let categories = allCategories?.filter((e: any) => e.academyId === academy?.id);
---
<Layout academy={academy}>
  {currentTime}
  <p>{errors.academy ? "Error con la academia" : "academia bien jej"}</p>
  <p>{errors.categories ? "Error con las categorias" : "cat bien jej"}</p>
  <p>{!errors.courses ? <Market courses={courses} categories={categories} /> : "Error con los cursos"}</p>
</Layout>
