---
import { type Category, type Course } from '../../env.d';
import timeLeft from '../../utils/timeLeft';
import ClientMarket from './Market.tsx';

const FIRST_SHOWED = 6

interface Props {
  courses: Course[];
  categories: Category[]
}

const { courses, categories } = Astro.props;

let filteredCourses = courses
filteredCourses = courses.sort((a, b) => {
  const getPriority = (course: any) => {
    if (!course.config.isAsync && !course.comingSoon) return 0; // Primero
    if (course.config.isAsync && !course.comingSoon) return 1; // Segundo
    if (!course.config.isAsync && course.comingSoon) return 2; // Ãšltimo
  };

  // @ts-ignore
  return getPriority(a) - getPriority(b);
});
filteredCourses = filteredCourses.filter((course) => {
  if (course.comingSoon) return true
  const time = course.events[0].startTime;
  return timeLeft(time, "hours") > -24 
});

---

<!-- <section id="marketSkeleton" class=" -->
<!--   px-4 m-auto absolute left-1/2 -translate-x-1/2 w-full -->
<!--   grid grid-cols-1 -->
<!--   md:max-w-container  -->
<!--   lg:px-0 lg:grid lg:grid-cols-[200px_auto] lg:gap-x-14 -->
<!--   "> -->
<!--   <ClientMarket courses={filteredCourses} firstShowed={FIRST_SHOWED} categories={categories}/> -->
<!-- </section> -->


<section
  class="px-4 m-auto 
  grid grid-cols-1
  md:max-w-container
  lg:px-0 lg:grid lg:grid-cols-[200px_auto] lg:gap-x-14
"
>
  <ClientMarket courses={filteredCourses} client:visible firstShowed={FIRST_SHOWED} categories={categories}/>
</section>
